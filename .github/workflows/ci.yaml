name: CI

on:
  push:
    branches:
      - main 
  pull_request:  
    branches:
      - main
  workflow_dispatch: # Enable manual trigger for local runner

jobs:
  # Testing via githubs linux runner
  tests-linux:
    runs-on: ubuntu-latest  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.11
    
      - name: Cache the virtualenv
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-
    
      - name: Install poetry
        run: |
          python -m pip install poetry==2.1.2
          python -m poetry config virtualenvs.in-project true

      - name: Re-generate poetry.lock file for linux, install dependencies
        run: |
          poetry lock
          poetry install --with dev

      - name: Run tests with pytest
        run: |
          poetry run pytest --cov --cov-report=term-missing --cov-report=html --disable-warnings -v

  # Testing on a local macOS runner
  tests-mac:
    if: github.event_name == 'workflow_dispatch' 
    runs-on: [self-hosted, macOS]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.9
    
      - name: Install poetry
        run: |
          python -m pip install poetry==2.1.2
          python -m poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Run tests with pytest
        run: |
          poetry run pytest --cov --cov-report=term-missing --cov-report=html --disable-warnings -v

  # Check if measurements changed
  check-measurements-changed:
    needs: tests-linux
    runs-on: ubuntu-latest
    outputs:
      measurements_changed: ${{ steps.check.outputs.changed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Need at least two commits to compare
          fetch-depth: 2 

      - name: Check for changes in measurements folder
        id: check
        run: |
          if (git diff --quiet HEAD^ HEAD -- 'measurements/' && git diff --quiet HEAD^ HEAD -- 'benchmark_visualizations/index_template.html'); then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "No changes in measurements folder or index_template."
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
            echo "Found changes in measurements folder or index_template."
          fi

  # Visualization
  visualize-measurements:
    needs: check-measurements-changed
    if: needs.check-measurements-changed.outputs.measurements_changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.9

      - name: Cache the virtualenv
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Install poetry
        run: |
          python -m pip install poetry==2.1.2
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Run visualization script
        run: |
          poetry run python scripts/visualize_measurements.py

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: visualization 
          folder: benchmark_visualizations
          clean: true 
